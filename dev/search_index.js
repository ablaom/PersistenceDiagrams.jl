var documenterSearchIndex = {"docs":
[{"location":"api/diagrams/#Persistence-Intervals-and-Diagrams-1","page":"API","title":"Persistence Intervals and Diagrams","text":"","category":"section"},{"location":"api/diagrams/#","page":"API","title":"API","text":"PersistenceInterval","category":"page"},{"location":"api/diagrams/#PersistenceDiagrams.PersistenceInterval","page":"API","title":"PersistenceDiagrams.PersistenceInterval","text":"PersistenceInterval{T<:AbstractFloat, C}\n\nThe type that represents a persistence interval. It behaves exactly like a Tuple{T, T}, but may have a representative cocycle attached to it.\n\n\n\n\n\n","category":"type"},{"location":"api/diagrams/#","page":"API","title":"API","text":"birth(::PersistenceInterval)","category":"page"},{"location":"api/diagrams/#PersistenceDiagrams.birth-Tuple{PersistenceInterval}","page":"API","title":"PersistenceDiagrams.birth","text":"birth(interval::PersistenceInterval)\n\nGet the birth time of interval.\n\n\n\n\n\n","category":"method"},{"location":"api/diagrams/#","page":"API","title":"API","text":"death(::PersistenceInterval)","category":"page"},{"location":"api/diagrams/#PersistenceDiagrams.death-Tuple{PersistenceInterval}","page":"API","title":"PersistenceDiagrams.death","text":"death(interval::PersistenceInterval)\n\nGet the death time of interval.\n\n\n\n\n\n","category":"method"},{"location":"api/diagrams/#","page":"API","title":"API","text":"persistence(::PersistenceInterval)","category":"page"},{"location":"api/diagrams/#PersistenceDiagrams.persistence-Tuple{PersistenceInterval}","page":"API","title":"PersistenceDiagrams.persistence","text":"death(interval::PersistenceInterval)\n\nGet the persistence of interval, which is equal to death - birth.\n\n\n\n\n\n","category":"method"},{"location":"api/diagrams/#","page":"API","title":"API","text":"representative(::PersistenceInterval)","category":"page"},{"location":"api/diagrams/#PersistenceDiagrams.representative-Tuple{PersistenceInterval}","page":"API","title":"PersistenceDiagrams.representative","text":"representative(interval::PersistenceInterval)\n\nGet the representative cocycle attached to interval. If representatives were not computed, throw an error.\n\n\n\n\n\n","category":"method"},{"location":"api/diagrams/#","page":"API","title":"API","text":"PersistenceDiagram","category":"page"},{"location":"api/diagrams/#PersistenceDiagrams.PersistenceDiagram","page":"API","title":"PersistenceDiagrams.PersistenceDiagram","text":"PersistenceDiagram{P<:PersistenceInterval} <: AbstractVector{P}\n\nType for representing persistence diagrams. Behaves exactly like an array of PersistenceIntervals, but is aware of its dimension and supports pretty printing and plotting.\n\n\n\n\n\n","category":"type"},{"location":"api/diagrams/#","page":"API","title":"API","text":"barcode(::Union{PersistenceDiagram, AbstractVector{<:PersistenceDiagram}})","category":"page"},{"location":"api/diagrams/#PersistenceDiagrams.barcode-Tuple{Union{AbstractArray{#s12,1} where #s12<:PersistenceDiagram, PersistenceDiagram}}","page":"API","title":"PersistenceDiagrams.barcode","text":"barcode(diagram)\n\nPlot the barcode plot of persistence diagram or multiple diagrams diagrams. The infinity keyword argument determines where the infinity line is placed. If unset, the function tries to use threshold(diagram) or guess a good position to place the line at.\n\n\n\n\n\n","category":"method"},{"location":"api/diagrams/#Distances-Between-Persistence-Diagrams-1","page":"API","title":"Distances Between Persistence Diagrams","text":"","category":"section"},{"location":"api/diagrams/#","page":"API","title":"API","text":"matching","category":"page"},{"location":"api/diagrams/#PersistenceDiagrams.matching","page":"API","title":"PersistenceDiagrams.matching","text":"matching(m::Matching; bottleneck=m.bottleneck)\n\nGet the matching of a Matching object represented by a vector of pairs of intervals. If bottleneck is set to true, only return the edges with length equal to the weight of the matching.\n\n\n\n\n\nmatching(::Bottleneck, left, right)\n\nFind the bottleneck matching between persistence diagrams left and right. Infinite intervals are matched to eachother.\n\nleft = PersistenceDiagram(0, [(1.0, 2.0), (5.0, 8.0)])\nright = PersistenceDiagram(0, [(1.0, 2.0), (3.0, 4.0), (5.0, 10.0)])\nmatching(Bottleneck(), left, right)\n\n# Example\n\n# output\n\n3-element Matching with weight 2.0:\n [1.0, 2.0) => [1.0, 2.0)\n [3.0, 3.0) => [3.0, 4.0)\n [5.0, 8.0) => [5.0, 10.0)\n\nSee also\n\nBottleneck\ndistance\n\n\n\n\n\nmatching(::Wasserstein, left, right)\n\nFind the Wasserstein matching between persistence diagrams left and right. Infinite intervals are matched to eachother.\n\nExample\n\nleft = PersistenceDiagram(0, [(1.0, 2.0), (5.0, 8.0)])\nright = PersistenceDiagram(0, [(1.0, 2.0), (3.0, 4.0), (5.0, 10.0)])\nmatching(Wasserstein(), left, right)\n\n# output\n\n3-element Matching with weight 3.0:\n [1.0, 2.0) => [1.0, 2.0)\n [3.0, 3.0) => [3.0, 4.0)\n [5.0, 8.0) => [5.0, 10.0)\n\nSee also\n\nWasserstein\ndistance\n\n\n\n\n\n","category":"function"},{"location":"api/diagrams/#","page":"API","title":"API","text":"distance","category":"page"},{"location":"api/diagrams/#PersistenceDiagrams.distance","page":"API","title":"PersistenceDiagrams.distance","text":"distance(::Matching)\n\nGet the weight of a Matching object.\n\n\n\n\n\ndistance(::Bottleneck, left, right)\n\nCompute the bottleneck distance between persistence diagrams left and right. Infinite intervals are matched to eachother.\n\nExample\n\nleft = PersistenceDiagram(0, [(1.0, 2.0), (5.0, 8.0)])\nright = PersistenceDiagram(0, [(1.0, 2.0), (3.0, 4.0), (5.0, 10.0)])\ndistance(Bottleneck(), left, right)\n\n# output\n\n2.0\n\nSee also\n\nBottleneck\nmatching\n\n\n\n\n\ndistance(::Wasserstein, left, right)\n\nCompute the Wasserstein distance between persistence diagrams left and right. Infinite intervals are matched to eachother.\n\nExample\n\nleft = PersistenceDiagram(0, [(1.0, 2.0), (5.0, 8.0)])\nright = PersistenceDiagram(0, [(1.0, 2.0), (3.0, 4.0), (5.0, 10.0)])\ndistance(Wasserstein(), left, right)\n\n# output\n\n3.0\n\nSee also\n\nWasserstein\nmatching\n\n\n\n\n\n","category":"function"},{"location":"api/diagrams/#","page":"API","title":"API","text":"Bottleneck","category":"page"},{"location":"api/diagrams/#PersistenceDiagrams.Bottleneck","page":"API","title":"PersistenceDiagrams.Bottleneck","text":"Bottleneck\n\nUse this object to find the bottleneck distance or matching between persistence diagrams. The distance value is equal to\n\nW_infty(X Y) = inf_etaXrightarrow Y sup_xin X x-eta(x)_infty\n\nwhere X and Y are the persistence diagrams and eta is a perfect matching between the intervals. Note the X and Y don't need to have the same number of points, as the diagonal points are considered in the matching as well.\n\nWarning\n\nComputing the bottleneck distance requires mathcalO(n^2) space!\n\nMethods\n\nmatching(::Bottleneck, ::Any, ::Any): construct a bottleneck Matching.\ndistance(::Bottleneck, ::Any, ::Any): find the bottleneck distance.\n\n\n\n\n\n","category":"type"},{"location":"api/diagrams/#","page":"API","title":"API","text":"Wasserstein","category":"page"},{"location":"api/diagrams/#PersistenceDiagrams.Wasserstein","page":"API","title":"PersistenceDiagrams.Wasserstein","text":"Wasserstein(q=1)\n\nUse this object to find the Wasserstein distance or matching between persistence diagrams. The distance value is equal to\n\nW_q(XY)=leftinf_etaXrightarrow Ysum_xin Xx-eta(x)_infty^qright\n\nwhere X and Y are the persistence diagrams and eta is a perfect matching between the intervals. Note the X and Y don't need to have the same number of points, as the diagonal points are considered in the matching as well.\n\nWarning\n\nComputing the Wasserstein distance requires mathcalO(n^2) space!\n\nMethods\n\nmatching(::Wasserstein, ::Any, ::Any): construct a Wasserstein Matching.\ndistance(::Wasserstein, ::Any, ::Any): find the Wasserstein distance.\n\n\n\n\n\n","category":"type"},{"location":"api/diagrams/#","page":"API","title":"API","text":"Matching","category":"page"},{"location":"api/diagrams/#PersistenceDiagrams.Matching","page":"API","title":"PersistenceDiagrams.Matching","text":"Matching\n\nA matching between two persistence diagrams.\n\nMethods\n\ndistance(::Matching)\nmatching(::Matching)\n\n\n\n\n\n","category":"type"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"EditURL = \"https://github.com/mtsch/PersistenceDiagrams.jl/blob/master/docs/src/examples/distances.jl\"","category":"page"},{"location":"generated/distances/#Distances-1","page":"Bottleneck and Wasserstein Distance","title":"Distances","text":"","category":"section"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"In this example we will demonstrate computing distances between persistence diagrams. We will use Ripserer.jl to generate the diagrams.","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"using Ripserer\nusing PersistenceDiagrams\nusing Plots\nusing Random; Random.seed!(1337); gr(); nothing # hide","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"We will again look at the persistent homology of a square with a round hole in the center.","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"function cutout(n)\n    points = NTuple{2, Float64}[]\n    while length(points) < n\n        x, y = (8rand() - 4, 8rand() - 4)\n        if x^2 + y^2 > 1\n            push!(points, (x, y))\n        end\n    end\n    points\nend\nnothing # hide","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"In this example, we're interested in the first persistent homology group of two samples of this space, one with 1000 points and another with 500 points.","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"cutout_1 = cutout(1000)\nscatter(cutout_1,\n        color=2,\n        aspect_ratio=1,\n        label=\"\",\n        title=\"cutout_1\")","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"cutout_2 = cutout(500)\nscatter(cutout_2,\n        color=3,\n        aspect_ratio=1,\n        label=\"\",\n        title=\"cutout_2\")","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"We compute the first persistence diagrams.","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"_, result_1 = ripserer(cutout_1)\n_, result_2 = ripserer(cutout_2)\n\nplot(plot(result_1, title=\"cutout_1\", markercolor=2, xlim=(0, 2.2), ylim=(0, 2.2)),\n     plot(result_2, title=\"cutout_2\", markercolor=3, xlim=(0, 2.2), ylim=(0, 2.2)))","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"We notice the diagrams are similar. We can formally describe this similarity with the Bottleneck and Wasserstein distances. First, let's look at their definitions.","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"The q-th Wasserstein distance is defined as","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"W_q(XY)=leftinf_etaXrightarrow Ysum_xin Xx-eta(x)_infty^qright","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"where X and Y are the persistence diagrams and eta is a perfect matching between the intervals. We also include the points on the diagonals of X and Y to ensure a perfect matching always exists.","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"The bottleneck distance W_infty is defined in a similar manner, as","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"W_infty(X Y) = inf_etaXrightarrow Y sup_xin X x-eta(x)_infty","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"In other words, the value of the Wasserstein distance between to diagrams is equal to the q-norm of the of the solution of the assignment problem. The value of the Bottleneck distance is equal to the maximum weight in the solution to the minimum weight perfect matching problem.","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"Now, let's look at what these distances say about the diagrams we have computed earlier.","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"We can construct a matching by using the matching function.","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"match_bottle = matching(Bottleneck(), result_1, result_2)","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"match_wasser = matching(Wasserstein(), result_1, result_2)","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"We can access the distance as follows.","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"distance(match_bottle)","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"Or if we don't care about the matching, we can compute the distance directly.","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"distance(Wasserstein(), result_1, result_2)","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"We plot the matchings using the plot function.","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"plot(match_bottle)","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"plot(match_wasser)","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"In the case of the bottleneck distance, we can show the full matching by supplying the bottleneck=false parameter to plot.","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"plot(match_bottle, bottleneck=false)","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"","category":"page"},{"location":"generated/distances/#","page":"Bottleneck and Wasserstein Distance","title":"Bottleneck and Wasserstein Distance","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#PersistenceDiagrams.jl-1","page":"Home","title":"PersistenceDiagrams.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"This package provides the PersistenceInterval and PersistenceDiagram types as well as some functions for working with them. If you want to compute persistence diagrams, please see Ripserer.jl.","category":"page"},{"location":"#Overview-1","page":"Home","title":"Overview","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"This package currently supports the following.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Persistence diagram plotting.\nBottleneck and Wasserstein matching and distance computation.\nPersistence images.","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"EditURL = \"https://github.com/mtsch/PersistenceDiagrams.jl/blob/master/docs/src/examples/basics.jl\"","category":"page"},{"location":"generated/basics/#Basics-1","page":"Basics","title":"Basics","text":"","category":"section"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"In this section, we will show the basic usage, construction and plotting of persistence intervals and diagrams. We start by importing the library.","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"using PersistenceDiagrams","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"A PersistenceDiagram is composed of persistence intervals, so we will introduce those first.","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"finite_interval = PersistenceInterval(1, 2)","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"We can access, the birth death and persistence of the interval with the appropriately named functions.","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"birth(finite_interval), death(finite_interval), persistence(finite_interval)","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"To represent infinite intervals, we use the floating point value Inf.","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"infinite_interval = PersistenceInterval(0, Inf)","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"The finiteness of the interval can be checked with the isfinite function from Base.","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"isfinite(infinite_interval)","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"A persistence interval can also have a representative attached. There are no limitations on what type the representative can be, but it's intended to be used with things such as representative cycles.","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"interval_with_rep = PersistenceInterval(3, 7, [1, 2, 3])","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"representative(interval_with_rep)","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"A PersistenceDiagram is essentially the same as a Vector of PersistenceInterval, but again has additional information attached. A diagram can be constructed as follows.","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"diagram_1 = PersistenceDiagram(0, [finite_interval, infinite_interval])","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"We can access the dimension of a diagram with the dim function.","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"dim(diagram_1)","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"Functions that work on arrays should all work on PersistenceDiagrams as well.","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"sort(diagram_1, by=death, rev=true)","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"diagram_1[1]","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"Optionally, we can add a threshold to the diagram. The threshold is currently only used in plotting. We will show the effect of the threshold argument later.","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"diagram_1_thresh = PersistenceDiagram(0, [finite_interval, infinite_interval], threshold=5)","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"threshold(diagram_1_thresh)","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"threshold(diagram_1)","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"Alternatively, we can also construct a diagram by passing it an array of tuples.","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"diagram_2 = PersistenceDiagram(1, [(0, 1), (4, 7), (5, Inf)])","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"We plot a diagram by calling the plot function from Plots.jl.","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"using Plots\ngr() # hide\n\nplot(diagram_1_thresh)","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"Note that the infinty line was placed at the value of the threshold.","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"Passing persistence=true will plot the diagram in a birth vs. persistence coordinates.","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"plot(diagram_1, persistence=true)","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"To plot the diagram as a barcode, we use the barcode function.","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"barcode(diagram_2)","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"If we want to plot multiple diagrams on the same plot, simply pass an array of PersistenceDiagrams or multiple arguments to the functions.","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"plot([diagram_1_thresh, diagram_2])","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"barcode(diagram_1_thresh, diagram_2)","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"","category":"page"},{"location":"generated/basics/#","page":"Basics","title":"Basics","text":"This page was generated using Literate.jl.","category":"page"}]
}
